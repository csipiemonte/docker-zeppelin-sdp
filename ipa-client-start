#!/bin/bash

# Copyright 2014--2015 Jan Pazdziora
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

#inherit init (PID=1) variables

for e in $(tr "\000" "\n" < /proc/1/environ); do
        eval "export $e"
done

function stop_running () {
    echo "[ipa-client-start] SIGTERM received"
	#/usr/sbin/ipa-client-stop
	
	#systemctl stop sssd
}
trap stop_running SIGTERM

function set_proxy {
	# Set proxy
	echo "Setting proxy"
	export http_proxy=$PROXY
	export https_proxy=$PROXY
}

# param $1 = [ import | backup | restore ]: parameter to /manage-notebooks.sh
function run_zeppelin {
	cd /usr/hdp/2.6.0.3-8/zeppelin
	if [ ! -f  /var/run/zeppelin/zeppelin.pid ] ; then
		echo "Starting Zeppelin"		
		bin/zeppelin.sh &
		
		echo "Storing Zeppelin PID [$!] to /var/run/zeppelin/zeppelin.pid"
		if [ ! -d /var/run/zeppelin ] ; then
			mkdir /var/run/zeppelin
		fi
		echo $! > /var/run/zeppelin/zeppelin.pid
		
		# Importing notebooks
		/usr/sbin/manage-notebooks.sh $1
	else
		echo "Zeppelin already running with PID [$(cat /var/run/zeppelin/zeppelin.pid)]"
	fi
}

rm -rf /var/run/*.pid

if [ -n "$IPA_PORT_53_UDP_ADDR" ] ; then
	echo "nameserver $IPA_PORT_53_UDP_ADDR" > /etc/resolv.conf
fi

if [ -f /etc/ipa/ca.crt ] ; then

	# Retrieve HOSTNAME_IPA
	IPA=$( curl -si http://$IPASERVER/ | perl -lne 'm!^Location:\shttps?://(.+?)/! and print $1' )
	IPASERVERDOMAIN=${IPA#*.}
	if [ -f /etc/hostname.ipa-client ] ; then
		HOSTNAME_IPA=$(cat /etc/hostname.ipa-client)
	else
		HOSTNAME_IPA=$( hostname ).$TOOL.$IPASERVERDOMAIN
		echo "$HOSTNAME_IPA" > /etc/hostname.ipa-client
	fi
	
	# Check if the value of Keytab in the 'ipa host-show' is True: the client is already enrolled.
	if [ "$(cut -d':' -f2 <<< $(ipa host-show $HOSTNAME_IPA | sed -n -e '/^\s*Keytab:/p'))" == "True" ] ; then
		echo "System is already FreeIPA-enrolled."
	else
		echo "Re-enrolling..."
		/usr/sbin/ipa-join -h $HOSTNAME_IPA		# API v2
		echo "FreeIPA re-enrolled"
	fi	    
	
	echo "System is ready."
	
	set_proxy
	
    run_zeppelin restore
	
else

	# Set hostname for ipa-client-install
	IPA=$( curl -si http://$IPASERVER/ | perl -lne 'm!^Location:\shttps?://(.+?)/! and print $1' )
	IPASERVERDOMAIN=${IPA#*.}
	HOSTNAME_FQDN=$( hostname ).$TOOL.$IPASERVERDOMAIN
	HOSTNAME_OPTS=--hostname=$HOSTNAME_FQDN
	
	# Try to restore a previous IPA client installation
	/usr/sbin/manage-freeipa-backupfiles.sh restore
	if [ -f /etc/ipa/ca.crt ] ; then
		echo "Found a previous installation of FreeIPA client for host $HOSTNAME_FQDN"
		if [ -n "$(ipa host-show $HOSTNAME_FQDN)" ] ; then
			echo "Host $HOSTNAME_FQDN checked and exists on IPA server"
			if [ "$(cut -d':' -f2 <<< $(ipa host-show $HOSTNAME_FQDN | sed -n -e '/^\s*Keytab:/p'))" == " False" ] ; then
				echo "No keytab on IPA server"
				echo "Removing useless restored keytab"
				rm -f /etc/krb5.keytab
				echo "Re-enroll to IPA Realm"
				ipa-join -h $HOSTNAME_FQDN               # API v2
			else
				echo "Keytab is already on IPA server"
			fi
		else
			echo "Host $HOSTNAME_FQDN does not exist on IPA server"
			/usr/sbin/manage-freeipa-backupfiles.sh delete
			ipa-client-install --uninstall
			restore=true
		fi
	fi

	# Set hostname by modifying /etc/hosts and /etc/hostname
	# Replace last line of /etc/hosts
	rancher_host_entry=$(tail -n 1 /etc/hosts | head -n1 | awk '{print $2;}')
	head -n -1 /etc/hosts > /etc/hosts.tmp
	echo "$(hostname -I) $(hostname).$TOOL.$IPASERVERDOMAIN $(hostname) $rancher_host_entry" >> /etc/hosts.tmp
	cat /etc/hosts.tmp > /etc/hosts
	echo "/etc/hosts updated..."
	echo "$HOSTNAME_FQDN" > /etc/hostname
		
	if [ ! -f /etc/ipa/ca.crt -o -n "$restore" ] ; then # Run following only if this is a brand new installation or if previous backup was deleted
	
		echo "First ipa-client installation for host $HOSTNAME_FQDN"
		# FreeIPA Client Installation
		/usr/sbin/ipa-client-install $IPA_CLIENT_INSTALL_OPTS --force --no-nisdomain -p admin -w "$PASSWORD" -U -v  --mkhomedir --realm=$REALM --domain=$IPASERVERDOMAIN --server=$IPASERVER  --enable-dns-updates < /dev/null
		cp -f /etc/hostname /etc/hostname.ipa-client
		echo "FreeIPA-enrolled."
	fi
	
	sed -i "/^\[sssd\].*/s//enumerate = True\\n\[sssd\]/" /etc/sssd/sssd.conf
	cat /etc/sssd/sssd.conf
	echo "Restarting SSSD"
	/usr/bin/systemctl restart sssd
	echo "Aligning the users"
	sleep 50
	getent passwd
	echo "kiniting admin"
	echo -n "$PASSWORD" | kinit admin

	# $DOMAIN is in the form of "domain.organization.com (DC1.DC2.DC3)"
	DC1=$(cut -d'.' -f1 <<<"$DOMAIN")
	DC2=$(cut -d'.' -f2 <<<"$DOMAIN")
	DC3=$(cut -d'.' -f3 <<<"$DOMAIN")
	# $PROXY is in the form of "http[s]://PROXYHOST:PROXYPORT"
	PROXYHOST=$(cut -d'/' -f3 <<<$(cut -d':' -f2 <<<"$PROXY"))
	PROXYPORT=$(cut -d':' -f3 <<<$PROXY)

	cp /usr/hdp/2.6.0.3-8/zeppelin/conf/shiro.ini.template /usr/hdp/2.6.0.3-8/zeppelin/conf/shiro.ini
	sed -i "/^#ldapRealm =.*/s//ldapRealm = org.apache.zeppelin.realm.LdapGroupRealm/" /usr/hdp/2.6.0.3-8/zeppelin/conf/shiro.ini
	sed -i "/^#ldapRealm.contextFactory.url.*/s//ldapRealm.contextFactory.url = ldap:\/\/$IPASERVER:389/" /usr/hdp/2.6.0.3-8/zeppelin/conf/shiro.ini
	sed -i "/^#ldapRealm.contextFactory.environment\[ldap.searchBase\].*/s//ldapRealm.contextFactory.environment\[ldap.searchBase\] = DC=$DC1,DC=$DC2,DC=$DC3/" /usr/hdp/2.6.0.3-8/zeppelin/conf/shiro.ini
	sed -i "/^#ldapRealm.userDnTemplate.*/s//ldapRealm.userDnTemplate = uid={0},CN=users,CN=accounts,DC=$DC1,DC=$DC2,DC=$DC3/" /usr/hdp/2.6.0.3-8/zeppelin/conf/shiro.ini
	sed -i "/^JAVA_OPTS+.*/s//JAVA_OPTS+=\" -Dhttps.proxyHost=$PROXYHOST -Dhttps.proxyPort=$PROXYPORT -Dhttp.proxyHost=$PROXYHOST -Dhttp.proxyPort=$PROXYPORT -Dzeppelin.log.file=\${ZEPPELIN_LOGFILE}\"/" /usr/hdp/2.6.0.3-8/zeppelin/bin/zeppelin.sh

	echo "Checking alternatives"
	alternatives --list
	echo "Checking java"
	ls -lat /opt/jdk1.8.0_181/bin
	ls -lat /opt/jdk1.8.0_181/jre/bin
	java -version
	
	/usr/sbin/manage-freeipa-backupfiles.sh backup	
		
	set_proxy 		
    
    run_zeppelin import
fi
	